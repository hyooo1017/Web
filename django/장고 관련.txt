* 코드 터미널에서 manage.py 파일이 있는 폴더로 들어가서(ex. cd django/intro)
  python manage.py runserver로 서버 실행

* 장고는 플라스크와 유사하지만 파일을 세분화하여 사용하는 것이 다름

* 장고에서는 주로 세 파일을 사용(코딩 및 수정)
   - urls.py
   - views.py
   - html 파일(ex. index.html)
     -> views.py에서 함수를 정의할 때 보여줄 html 파일이름에 따라 index라는 html파일명은 바뀔 수 있음

* 장고는 templates라는 폴더 안에서 html파일을 찾기 때문에 폴더명은 templates 그대로!!

* 함수를 정의할 때 첫 번째 파라미터로 약속된 request란 변수는
  장고 웹서버를 통해 요청을 했을 때 요청에 대한 모든 정보를 이 변수에 담아 넘겨줌

* 장고에서 새로운 페이지를 만들 때 과정
1. urls.py에서 path 설정 ( 플라스크에서 @app.route와 동일한 기능 )
   ex) path('dinner/', views.dinner)

2. views.py에서 함수 정의
   ex) def dinner(request):
	foods = ['초밥', '카레', '칼국수', '치킨', '김치찌개']
	pick = random.choice(foods)
	context = {
	    'pick' : pick,
    	}
	return render(request, 'dinner.html', context)

3. dinner.html 작성
   -> html:5(!도 가능)로 자동 완성 기능을 사용하여 body부분에 보여주고 싶은 내용 작성

* html 파일 제일 위에 {% load static %}를 작성하여 static 경로 사용
   -> pages 폴더에 static 폴더 생성
       (static이라는 폴더 안에서 파일을 찾기 때문에 폴더명은 static 그대로!!)


* 새로운 앱 만들기
1. 열려 있는 서버 다 닫기(crtl + c)

2. python manage.py startapp utils
   -> utils부분은 원하는대로 이름 설정

3. settings.py의 INSTALLED_APPS에 추가해주기

4. urls.py 따로 관리 (pages, utils 폴더 안에 따로따로 생성)
 (1) pages나 utils 안의 urls.py
   -> admin path 삭제
   -> from . import views로 수정

 (2) intro 안의 urls.py
   -> from django.urls import path, include로 수정
   -> path('pages/', include('pages.urls'))로 앱 urls.py 경로 추가 ( 각 앱 urls.py 모두 추가 )

* 장고의 여러 앱에서 같은 이름의 html이 작성되어 templates에 저장되어 있다면
  settings.py의 INSTALLED_APPS에 경로 설정되어 있는 순서에 따라 같은 이름의 다른 파일이 경로로 잡힐 수 있음!!
   -> 그렇기 때문에 templates 폴더 안에 앱 이름과 같은 이름의 폴더를 생성하여 모든 html 파일은 그 폴더에 저장

